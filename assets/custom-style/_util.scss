// --------------------------------

// How to create custom utility classes

// --------------------------------

// ðŸ‘‡ your custom utility class
// .my-util-class {
//   property: value;
// }

// ðŸ‘‡ (optional) create responsive variations - edit only [my-util-class, property, value]
// @each $breakpoint, $value in $breakpoints {
//   @include breakpoint(#{$breakpoint}) {
//     .my-util-class\@#{$breakpoint} {
//       property: value;
//     }
//   }
// }

/* The Grid
-----------------------------------------------------------------------*/
.grid-every-layout {
  --min: 15rem;
  --space: 1rem;
  align-content: start;
  display: grid;
  gap: var(--space);
  grid-template-columns: 100%;
}

/* needs javascript for when the container size is wider than the grid width */
.grid-every-layout.aboveMin {
  grid-template-columns: repeat(auto-fit, minmax(var(--min), 1fr));
}

/* The Frame
-----------------------------------------------------------------------*/
.frame {
  padding-bottom: calc(var(--n) / var(--d) * 100%);
  position: relative;
}

.frame916 {
  --n: 9;
  --d: 16;
}

.frame43 {
  --n: 3;
  --d: 4;
}

.frame-square {
  --n: 1;
  --d: 1;
}

.frame > * {
  overflow: hidden;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.frame > img,
.frame > video {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* The Switcher
-----------------------------------------------------------------------*/
.switcher {
  --threshold: 40rem;
  --space: 1rem;
  --large: calc(1 + 7 / 10);
}

.switcher > * {
  display: flex;
  flex-wrap: wrap;
  /* â†“ Multiply by -1 to make negative */
  margin: calc(var(--space) / 2 * 1);
}

.switcher > * > * {
  flex-grow: 1;
  flex-basis: calc((var(--threshold) - (100% - var(--space))) * 999);
  /* â†“ Half the value to each element, combining to make the whole */
  margin: calc(var(--space) / 2);
}

/* .switcher > * > :nth-child(1) {
  flex-grow: var(--large);
} */

.switcher > * > :nth-last-child(n + 4),
.switcher > * > :nth-last-child(n + 4) ~ * {
  flex-basis: 100%;
}

/* The Sidebar
-----------------------------------------------------------------------*/

/* â†“ targets the intermediary wrapper */
.sidebar {
  overflow: hidden;
  --space: 1em;
  --side-width: 15rem;
  --content-min: 50%;
}

.sidebar > * {
  display: flex;
  flex-wrap: wrap;
  margin: calc((var(--space) / 2) * -1);
}

.sidebar > * > * {
  flex-basis: var(--side-width);
  flex-grow: 1;
  /* â†“ applies to both elements */
  margin: calc((var(--space) / 2));
}

.newsletter-input {
  position: relative;
}

.newsletter-input__input {
  width: 100%;
  padding: calc(var(--space-sm) + 0.5rem) var(--space-md);
  border-radius: 50em;
  border-width: 0;
  background-color: hsla(
    var(--color-contrast-higher-h),
    var(--color-contrast-higher-s),
    var(--color-contrast-higher-l),
    0.075
  );
}

.newsletter-input__btn {
  position: absolute;
  top: 50%;
  right: 0.5rem;
  transform: translateY(-50%);
}
